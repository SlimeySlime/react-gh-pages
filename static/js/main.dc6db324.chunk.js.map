{"version":3,"sources":["Board/Read.js","Board/Write.js","Board/List.js","Board/App.js","index.js"],"names":["Read","React","Component","Write","state","title","content","postBoard","a","axios","get","alert","Wrap","styled","div","Button","ListItem","List","boards","handleChange","e","target","name","value","setState","loadingData","response","data","console","log","this","onChange","rows","JSON","stringify","map","item","to","key","App","className","exact","path","component","Square","props","onClick","Board","squares","Array","fill","i","renderSquare","WinnerCheck","winMatch","length","b","c","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.dc6db324.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass Read extends React.Component {\r\n    render(){\r\n        return(\r\n            <div>\r\n                read\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Read;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\nclass Write extends React.Component {\r\n    state = {\r\n        title : '',\r\n        content : '',\r\n    };\r\n\r\n    postBoard = async() => {\r\n        const {title, content} = this.state;\r\n        const post = await axios.get(\"https://localhost:3000/board\", {\r\n            title, content\r\n        });\r\n\r\n        alert(\"전송중\");\r\n        \r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                write\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Write;","import React, { Component } from 'react'; \r\nimport {Link} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrap = styled.div`\r\n    padding : 20px;\r\n`\r\nconst Button = styled.div`\r\n    border-top:1px solid #eee;\r\n    padding : 20px;\r\n    a {\r\n        float : left;\r\n        padding : 10px 20px;\r\n        text-decoration : none;\r\n        border-radius : 5px;\r\n        background : #212121;\r\n        color : #fff;\r\n    }\r\n`\r\nconst ListItem = styled.div`\r\n    width : 100%;\r\n`\r\n\r\nclass List extends Component { \r\n    state = {\r\n        boards:[],\r\n    };\r\n\r\n    handleChange = (e) => {\r\n        const {name, value} = e.target;\r\n        this.setState(\r\n            {\r\n                [name] : value,\r\n            }\r\n        );\r\n    };\r\n    // 로딩\r\n    loadingData = async() => {\r\n        try{\r\n            const response = await axios.get(\"https//localhost:3000/board\");\r\n            this.setState({\r\n                //boards : 'test',\r\n                boards : response.data,\r\n            });\r\n        }catch(e){\r\n            console.log(e);\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const {loadingData} = this;\r\n        loadingData();\r\n    }\r\n\r\n    render() {\r\n        const { boards } = this.state;\r\n        const { handleChange } = this;\r\n        return (\r\n            <Wrap>\r\n            <div>\r\n            <h2> List </h2>\r\n            {/* {boards} */}\r\n            {boards && <textarea\r\n                name=\"getBoards2\"\r\n                onChange={handleChange}\r\n                rows={7}\r\n                value={JSON.stringify(boards, null, 2)}\r\n            />}\r\n            {boards.map( (item) => {\r\n                return(\r\n                    <ListItem key={item.key}>\r\n                        <Link to={'/read/${item.id}'}>\r\n                            <h3>{item.title}</h3>\r\n                            <p>{item.content}</p>\r\n                        </Link>\r\n                    </ListItem>\r\n                );\r\n            })}\r\n            <Button>\r\n                <Link to={'/write'}>글쓰기</Link>\r\n            </Button>\r\n            </div>\r\n            </Wrap>\r\n        );\r\n    }\r\n    \r\n\r\n} \r\n\r\nexport default List;\r\n","import React from 'react';\r\nimport Read from './Read';\r\nimport Write from './Write';\r\nimport List from './List';\r\nimport {Route, Link} from 'react-router-dom';\r\n\r\nclass App extends React.Component{\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n            {/* <div> testing </div> */}\r\n            <div className='lnk'>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/\">List</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/read\">Read</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/write\">Write</Link>\r\n                    </li>\r\n                </ul>\r\n            </div> \r\n            <div className=\"route\">\r\n                <Route exact path=\"/\" component={List} />\r\n                <Route path=\"/read\" component={Read} />\r\n                <Route path=\"/write\" component={Write} />\r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n        \r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {BrowserRouter} from 'react-router-dom';\r\nimport './index.css';\r\nimport App from './Board/App';\r\n\r\nclass Square extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: null,\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n        <button className=\"square\" onClick={ () => this.props.onClick() }>\r\n            {/* {this.props.value} */}\r\n            {/* {this.state.value} */}\r\n            {this.props.value}\r\n        </button>\r\n        );\r\n    }\r\n}\r\n// Square 클래스와 같은 기능?\r\nfunction Squaref(props){\r\n    return(\r\n        <button className=\"square\" onClick={ () => props.onClick()}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n}\r\n\r\nclass Board extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            squares : Array(8).fill(0),\r\n        }\r\n    }\r\n    renderSquare(i) {\r\n        // return <Square value={i}/>;\r\n        return (\r\n            <Square \r\n                value = {this.props.squares[i]}\r\n                // onClick = { () => this.handleClick(i)}  \r\n                onClick = { () => this.props.onClick(i)}  \r\n            />\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            \r\n            <div>\r\n                {/* {boardSquare} */}\r\n\r\n                <div className=\"board-row\">\r\n                {this.renderSquare(0)}\r\n                {this.renderSquare(1)}\r\n                {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                {this.renderSquare(3)}\r\n                {this.renderSquare(4)}\r\n                {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                {this.renderSquare(6)}\r\n                {this.renderSquare(7)}\r\n                {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n            );\r\n        \r\n    }\r\n}\r\n\r\nfunction WinnerCheck(squares){\r\n    const winMatch = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ]\r\n    for (let i = 0; i < winMatch.length; i++) {\r\n        const [a, b, c] = winMatch[i];\r\n        // \r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]){\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nclass Game extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history : [{\r\n                squares: Array(8).fill(null)\r\n            }],\r\n            xIsNext : true,\r\n            stepNumber : 0,\r\n        }\r\n    }\r\n    // board 에서 game으로 이동한 handleClick\r\n    handleClick(i) {\r\n        const history = this.state.history;\r\n        const current = history[history.length - 1]\r\n        const squares = current.squares.slice();\r\n        // 이긴 게임이거나 || squares[i] 가 null(빈칸)이 아니면\r\n        if (WinnerCheck(squares) || squares[i]) {\r\n            return; // 클릭 액션 x\r\n        }\r\n        squares[i] = this.state.xIsNext ? \"X\" : \"O\";\r\n        // 조금 복잡한 setState구문 \r\n        this.setState({\r\n            history : history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            stepNumber : history.length,\r\n            xIsNext : !this.state.xIsNext,\r\n        });\r\n    }\r\n    jumpTo(step) {\r\n        this.setState({\r\n            stepNumber : step,\r\n            xIsNext : (step) % 2 === 0  // 짝수면 true(x) 홀수면 false(o) 이므로\r\n        })\r\n    }\r\n    render() {  \r\n        const history = this.state.history;\r\n        const currentBoard = history[this.state.stepNumber];\r\n        const winner = WinnerCheck(currentBoard.squares);\r\n        let status;\r\n        if (winner) {\r\n            status = 'winner is : ' + winner;\r\n        }else{\r\n            status = 'Next Player : ' + (this.state.xIsNext ? 'X' : 'O' ) + ' / ' + this.state.xIsNext;\r\n        }\r\n\r\n        const moves = history.map( (step, move) => {\r\n            const description = move ? \"Go to  move # \" + move : \"Go to Start\";\r\n            const stepDebug = 'step : ' + step + ' // move : ' + move;\r\n            if (move == this.state.stepNumber) {\r\n                return (\r\n                    <li key={move}>\r\n                        current step\r\n                    </li>\r\n                )\r\n            }else {\r\n                return (\r\n                    <li key={move}>\r\n                        <button onClick={ () => this.jumpTo(move)}>{description} + {stepDebug}</button>\r\n                    </li>\r\n                );\r\n            }\r\n            \r\n        });\r\n        return (\r\n        <div className=\"game\">\r\n            <div className=\"game-board\">\r\n            <Board \r\n                squares = {currentBoard.squares} \r\n                onClick = {(i) => this.handleClick(i)}\r\n                />\r\n            </div>\r\n            <div className=\"game-info\">\r\n            <div>{status}</div>\r\n            <ol>{moves}</ol>\r\n            </div>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n  \r\n  // ========================================\r\n  \r\n  ReactDOM.render(\r\n    // <Game />,\r\n    // <App />,\r\n    <BrowserRouter>\r\n        <App />\r\n    </BrowserRouter>,\r\n    document.getElementById('root')\r\n  );\r\n  "],"sourceRoot":""}